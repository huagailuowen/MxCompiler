// Generated from /mnt/d/周宸源/大学/学习/程序/MxCompiler/src/antlr/Hard_Version_FormatString/Mxlexer.g4 by ANTLR 4.13.1

	import java.util.Stack;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class Mxlexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		FormatStringM=1, Void=2, Null=3, Bool=4, Int=5, String=6, New=7, Class=8, 
		True=9, False=10, This=11, If=12, Else=13, For=14, While=15, Break=16, 
		Continue=17, Return=18, Plus=19, Minus=20, Multiply=21, Divide=22, Mod=23, 
		Greater=24, Less=25, GreaterEqual=26, LessEqual=27, Equal=28, InEqual=29, 
		And=30, Or=31, Not=32, LeftMove=33, RightMove=34, AndBit=35, OrBit=36, 
		XorBit=37, NotBit=38, Assign=39, SelfPlus=40, SelfMinus=41, Member=42, 
		Comma=43, Semicolon=44, LeftBrace=45, RightBrace=46, Comment=47, BlockComment=48, 
		Whitespace=49, Interger=50, Identifier=51, ConstString=52, FormatStringI=53, 
		FormatStringL=54, FormatStringR=55;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"FormatStringChar", "FormatStringM", "Void", "Null", "Bool", "Int", "String", 
			"New", "Class", "True", "False", "This", "If", "Else", "For", "While", 
			"Break", "Continue", "Return", "Plus", "Minus", "Multiply", "Divide", 
			"Mod", "Greater", "Less", "GreaterEqual", "LessEqual", "Equal", "InEqual", 
			"And", "Or", "Not", "LeftMove", "RightMove", "AndBit", "OrBit", "XorBit", 
			"NotBit", "Assign", "SelfPlus", "SelfMinus", "Member", "Comma", "Semicolon", 
			"LeftBrace", "RightBrace", "Comment", "BlockComment", "Whitespace", "Interger", 
			"Identifier", "SringChar", "ConstString", "FormatStringI", "FormatStringL", 
			"FormatStringR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'void'", "'null'", "'bool'", "'int'", "'string'", "'new'", 
			"'class'", "'true'", "'false'", "'this'", "'if'", "'else'", "'for'", 
			"'while'", "'break'", "'continue'", "'return'", "'+'", "'-'", "'*'", 
			"'/'", "'%'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'&&'", "'||'", 
			"'!'", "'<<'", "'>>'", "'&'", "'|'", "'^'", "'~'", "'='", "'++'", "'--'", 
			"'.'", "','", "';'", "'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "FormatStringM", "Void", "Null", "Bool", "Int", "String", "New", 
			"Class", "True", "False", "This", "If", "Else", "For", "While", "Break", 
			"Continue", "Return", "Plus", "Minus", "Multiply", "Divide", "Mod", "Greater", 
			"Less", "GreaterEqual", "LessEqual", "Equal", "InEqual", "And", "Or", 
			"Not", "LeftMove", "RightMove", "AndBit", "OrBit", "XorBit", "NotBit", 
			"Assign", "SelfPlus", "SelfMinus", "Member", "Comma", "Semicolon", "LeftBrace", 
			"RightBrace", "Comment", "BlockComment", "Whitespace", "Interger", "Identifier", 
			"ConstString", "FormatStringI", "FormatStringL", "FormatStringR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


		int l_brace = 0;
		int stack_count = 0;
		Stack<Integer> stack = new Stack<Integer>();


	public Mxlexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Mxlexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 45:
			LeftBrace_action((RuleContext)_localctx, actionIndex);
			break;
		case 46:
			RightBrace_action((RuleContext)_localctx, actionIndex);
			break;
		case 55:
			FormatStringL_action((RuleContext)_localctx, actionIndex);
			break;
		case 56:
			FormatStringR_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void LeftBrace_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

				l_brace++;

			break;
		}
	}
	private void RightBrace_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:

				l_brace--;

			break;
		}
	}
	private void FormatStringL_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2:

					if(stack_count == 0){
						stack_count++;
						l_brace=0;
					}
					else{
						stack.push(l_brace);
						System.out.println("push "+l_brace);
						l_brace=0;
						stack_count++;
					}
				
			break;
		}
	}
	private void FormatStringR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:

					if(stack_count == 1){
						stack_count--;
						l_brace = 0;
					}
					else{
						if(l_brace!=0){
							System.err.println("pop!"+l_brace);
						}
						if(stack.empty()){
							System.err.println("stack empty");
						}
						l_brace = stack.pop();
						stack_count--;
					}
				
			break;
		}
	}
	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 0:
			return FormatStringChar_sempred((RuleContext)_localctx, predIndex);
		case 1:
			return FormatStringM_sempred((RuleContext)_localctx, predIndex);
		case 53:
			return ConstString_sempred((RuleContext)_localctx, predIndex);
		case 56:
			return FormatStringR_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean FormatStringChar_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return stack_count!=0&&l_brace == 0;
		}
		return true;
	}
	private boolean FormatStringM_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return stack_count>0 && l_brace==0;
		}
		return true;
	}
	private boolean ConstString_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2:
			return stack_count==0||l_brace > 0;
		}
		return true;
	}
	private boolean FormatStringR_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 3:
			return stack_count!=0&&l_brace==0;
		}
		return true;
	}

	public static final String _serializedATN =
		"\u0004\u00007\u018e\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u00025\u0007"+
		"5\u00026\u00076\u00027\u00077\u00028\u00078\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003"+
		"\u0000\u0082\b\u0000\u0001\u0001\u0001\u0001\u0004\u0001\u0086\b\u0001"+
		"\u000b\u0001\f\u0001\u0087\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017"+
		"\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!"+
		"\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001"+
		"%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001(\u0001)\u0001"+
		")\u0001)\u0001*\u0001*\u0001+\u0001+\u0001,\u0001,\u0001-\u0001-\u0001"+
		"-\u0001.\u0001.\u0001.\u0001/\u0001/\u0001/\u0001/\u0005/\u012e\b/\n/"+
		"\f/\u0131\t/\u0001/\u0001/\u00010\u00010\u00010\u00010\u00050\u0139\b"+
		"0\n0\f0\u013c\t0\u00010\u00010\u00010\u00010\u00010\u00011\u00041\u0144"+
		"\b1\u000b1\f1\u0145\u00011\u00011\u00012\u00012\u00052\u014c\b2\n2\f2"+
		"\u014f\t2\u00012\u00032\u0152\b2\u00013\u00013\u00053\u0156\b3\n3\f3\u0159"+
		"\t3\u00014\u00014\u00014\u00014\u00014\u00014\u00014\u00014\u00014\u0003"+
		"4\u0164\b4\u00015\u00015\u00015\u00015\u00015\u00015\u00015\u00015\u0001"+
		"5\u00015\u00015\u00055\u0171\b5\n5\f5\u0174\t5\u00015\u00015\u00016\u0001"+
		"6\u00016\u00016\u00036\u017c\b6\u00016\u00016\u00017\u00017\u00017\u0001"+
		"7\u00037\u0184\b7\u00017\u00017\u00018\u00018\u00038\u018a\b8\u00018\u0001"+
		"8\u00018\u0001\u013a\u00009\u0001\u0000\u0003\u0001\u0005\u0002\u0007"+
		"\u0003\t\u0004\u000b\u0005\r\u0006\u000f\u0007\u0011\b\u0013\t\u0015\n"+
		"\u0017\u000b\u0019\f\u001b\r\u001d\u000e\u001f\u000f!\u0010#\u0011%\u0012"+
		"\'\u0013)\u0014+\u0015-\u0016/\u00171\u00183\u00195\u001a7\u001b9\u001c"+
		";\u001d=\u001e?\u001fA C!E\"G#I$K%M&O\'Q(S)U*W+Y,[-]._/a0c1e2g3i\u0000"+
		"k4m5o6q7\u0001\u0000\b\u0006\u0000\n\n\r\r\"\"\\\\{{}}\u0002\u0000\n\n"+
		"\r\r\u0003\u0000\t\n\r\r  \u0001\u000019\u0001\u000009\u0002\u0000AZa"+
		"z\u0004\u000009AZ__az\u0004\u0000\n\n\r\r\"\"\\\\\u01a4\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001"+
		"\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000"+
		"\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000"+
		"]\u0001\u0000\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0000a\u0001"+
		"\u0000\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0000e\u0001\u0000\u0000"+
		"\u0000\u0000g\u0001\u0000\u0000\u0000\u0000k\u0001\u0000\u0000\u0000\u0000"+
		"m\u0001\u0000\u0000\u0000\u0000o\u0001\u0000\u0000\u0000\u0000q\u0001"+
		"\u0000\u0000\u0000\u0001\u0081\u0001\u0000\u0000\u0000\u0003\u0083\u0001"+
		"\u0000\u0000\u0000\u0005\u0089\u0001\u0000\u0000\u0000\u0007\u008e\u0001"+
		"\u0000\u0000\u0000\t\u0093\u0001\u0000\u0000\u0000\u000b\u0098\u0001\u0000"+
		"\u0000\u0000\r\u009c\u0001\u0000\u0000\u0000\u000f\u00a3\u0001\u0000\u0000"+
		"\u0000\u0011\u00a7\u0001\u0000\u0000\u0000\u0013\u00ad\u0001\u0000\u0000"+
		"\u0000\u0015\u00b2\u0001\u0000\u0000\u0000\u0017\u00b8\u0001\u0000\u0000"+
		"\u0000\u0019\u00bd\u0001\u0000\u0000\u0000\u001b\u00c0\u0001\u0000\u0000"+
		"\u0000\u001d\u00c5\u0001\u0000\u0000\u0000\u001f\u00c9\u0001\u0000\u0000"+
		"\u0000!\u00cf\u0001\u0000\u0000\u0000#\u00d5\u0001\u0000\u0000\u0000%"+
		"\u00de\u0001\u0000\u0000\u0000\'\u00e5\u0001\u0000\u0000\u0000)\u00e7"+
		"\u0001\u0000\u0000\u0000+\u00e9\u0001\u0000\u0000\u0000-\u00eb\u0001\u0000"+
		"\u0000\u0000/\u00ed\u0001\u0000\u0000\u00001\u00ef\u0001\u0000\u0000\u0000"+
		"3\u00f1\u0001\u0000\u0000\u00005\u00f3\u0001\u0000\u0000\u00007\u00f6"+
		"\u0001\u0000\u0000\u00009\u00f9\u0001\u0000\u0000\u0000;\u00fc\u0001\u0000"+
		"\u0000\u0000=\u00ff\u0001\u0000\u0000\u0000?\u0102\u0001\u0000\u0000\u0000"+
		"A\u0105\u0001\u0000\u0000\u0000C\u0107\u0001\u0000\u0000\u0000E\u010a"+
		"\u0001\u0000\u0000\u0000G\u010d\u0001\u0000\u0000\u0000I\u010f\u0001\u0000"+
		"\u0000\u0000K\u0111\u0001\u0000\u0000\u0000M\u0113\u0001\u0000\u0000\u0000"+
		"O\u0115\u0001\u0000\u0000\u0000Q\u0117\u0001\u0000\u0000\u0000S\u011a"+
		"\u0001\u0000\u0000\u0000U\u011d\u0001\u0000\u0000\u0000W\u011f\u0001\u0000"+
		"\u0000\u0000Y\u0121\u0001\u0000\u0000\u0000[\u0123\u0001\u0000\u0000\u0000"+
		"]\u0126\u0001\u0000\u0000\u0000_\u0129\u0001\u0000\u0000\u0000a\u0134"+
		"\u0001\u0000\u0000\u0000c\u0143\u0001\u0000\u0000\u0000e\u0151\u0001\u0000"+
		"\u0000\u0000g\u0153\u0001\u0000\u0000\u0000i\u0163\u0001\u0000\u0000\u0000"+
		"k\u0165\u0001\u0000\u0000\u0000m\u0177\u0001\u0000\u0000\u0000o\u017f"+
		"\u0001\u0000\u0000\u0000q\u0187\u0001\u0000\u0000\u0000st\u0004\u0000"+
		"\u0000\u0000tu\u0005{\u0000\u0000u\u0082\u0005{\u0000\u0000vw\u0005}\u0000"+
		"\u0000w\u0082\u0005}\u0000\u0000x\u0082\b\u0000\u0000\u0000yz\u0005\\"+
		"\u0000\u0000z\u0082\u0005\"\u0000\u0000{|\u0005\\\u0000\u0000|\u0082\u0005"+
		"n\u0000\u0000}~\u0005\\\u0000\u0000~\u0082\u0005r\u0000\u0000\u007f\u0080"+
		"\u0005\\\u0000\u0000\u0080\u0082\u0005\\\u0000\u0000\u0081s\u0001\u0000"+
		"\u0000\u0000\u0081v\u0001\u0000\u0000\u0000\u0081x\u0001\u0000\u0000\u0000"+
		"\u0081y\u0001\u0000\u0000\u0000\u0081{\u0001\u0000\u0000\u0000\u0081}"+
		"\u0001\u0000\u0000\u0000\u0081\u007f\u0001\u0000\u0000\u0000\u0082\u0002"+
		"\u0001\u0000\u0000\u0000\u0083\u0085\u0004\u0001\u0001\u0000\u0084\u0086"+
		"\u0003\u0001\u0000\u0000\u0085\u0084\u0001\u0000\u0000\u0000\u0086\u0087"+
		"\u0001\u0000\u0000\u0000\u0087\u0085\u0001\u0000\u0000\u0000\u0087\u0088"+
		"\u0001\u0000\u0000\u0000\u0088\u0004\u0001\u0000\u0000\u0000\u0089\u008a"+
		"\u0005v\u0000\u0000\u008a\u008b\u0005o\u0000\u0000\u008b\u008c\u0005i"+
		"\u0000\u0000\u008c\u008d\u0005d\u0000\u0000\u008d\u0006\u0001\u0000\u0000"+
		"\u0000\u008e\u008f\u0005n\u0000\u0000\u008f\u0090\u0005u\u0000\u0000\u0090"+
		"\u0091\u0005l\u0000\u0000\u0091\u0092\u0005l\u0000\u0000\u0092\b\u0001"+
		"\u0000\u0000\u0000\u0093\u0094\u0005b\u0000\u0000\u0094\u0095\u0005o\u0000"+
		"\u0000\u0095\u0096\u0005o\u0000\u0000\u0096\u0097\u0005l\u0000\u0000\u0097"+
		"\n\u0001\u0000\u0000\u0000\u0098\u0099\u0005i\u0000\u0000\u0099\u009a"+
		"\u0005n\u0000\u0000\u009a\u009b\u0005t\u0000\u0000\u009b\f\u0001\u0000"+
		"\u0000\u0000\u009c\u009d\u0005s\u0000\u0000\u009d\u009e\u0005t\u0000\u0000"+
		"\u009e\u009f\u0005r\u0000\u0000\u009f\u00a0\u0005i\u0000\u0000\u00a0\u00a1"+
		"\u0005n\u0000\u0000\u00a1\u00a2\u0005g\u0000\u0000\u00a2\u000e\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0005n\u0000\u0000\u00a4\u00a5\u0005e\u0000\u0000"+
		"\u00a5\u00a6\u0005w\u0000\u0000\u00a6\u0010\u0001\u0000\u0000\u0000\u00a7"+
		"\u00a8\u0005c\u0000\u0000\u00a8\u00a9\u0005l\u0000\u0000\u00a9\u00aa\u0005"+
		"a\u0000\u0000\u00aa\u00ab\u0005s\u0000\u0000\u00ab\u00ac\u0005s\u0000"+
		"\u0000\u00ac\u0012\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005t\u0000\u0000"+
		"\u00ae\u00af\u0005r\u0000\u0000\u00af\u00b0\u0005u\u0000\u0000\u00b0\u00b1"+
		"\u0005e\u0000\u0000\u00b1\u0014\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005"+
		"f\u0000\u0000\u00b3\u00b4\u0005a\u0000\u0000\u00b4\u00b5\u0005l\u0000"+
		"\u0000\u00b5\u00b6\u0005s\u0000\u0000\u00b6\u00b7\u0005e\u0000\u0000\u00b7"+
		"\u0016\u0001\u0000\u0000\u0000\u00b8\u00b9\u0005t\u0000\u0000\u00b9\u00ba"+
		"\u0005h\u0000\u0000\u00ba\u00bb\u0005i\u0000\u0000\u00bb\u00bc\u0005s"+
		"\u0000\u0000\u00bc\u0018\u0001\u0000\u0000\u0000\u00bd\u00be\u0005i\u0000"+
		"\u0000\u00be\u00bf\u0005f\u0000\u0000\u00bf\u001a\u0001\u0000\u0000\u0000"+
		"\u00c0\u00c1\u0005e\u0000\u0000\u00c1\u00c2\u0005l\u0000\u0000\u00c2\u00c3"+
		"\u0005s\u0000\u0000\u00c3\u00c4\u0005e\u0000\u0000\u00c4\u001c\u0001\u0000"+
		"\u0000\u0000\u00c5\u00c6\u0005f\u0000\u0000\u00c6\u00c7\u0005o\u0000\u0000"+
		"\u00c7\u00c8\u0005r\u0000\u0000\u00c8\u001e\u0001\u0000\u0000\u0000\u00c9"+
		"\u00ca\u0005w\u0000\u0000\u00ca\u00cb\u0005h\u0000\u0000\u00cb\u00cc\u0005"+
		"i\u0000\u0000\u00cc\u00cd\u0005l\u0000\u0000\u00cd\u00ce\u0005e\u0000"+
		"\u0000\u00ce \u0001\u0000\u0000\u0000\u00cf\u00d0\u0005b\u0000\u0000\u00d0"+
		"\u00d1\u0005r\u0000\u0000\u00d1\u00d2\u0005e\u0000\u0000\u00d2\u00d3\u0005"+
		"a\u0000\u0000\u00d3\u00d4\u0005k\u0000\u0000\u00d4\"\u0001\u0000\u0000"+
		"\u0000\u00d5\u00d6\u0005c\u0000\u0000\u00d6\u00d7\u0005o\u0000\u0000\u00d7"+
		"\u00d8\u0005n\u0000\u0000\u00d8\u00d9\u0005t\u0000\u0000\u00d9\u00da\u0005"+
		"i\u0000\u0000\u00da\u00db\u0005n\u0000\u0000\u00db\u00dc\u0005u\u0000"+
		"\u0000\u00dc\u00dd\u0005e\u0000\u0000\u00dd$\u0001\u0000\u0000\u0000\u00de"+
		"\u00df\u0005r\u0000\u0000\u00df\u00e0\u0005e\u0000\u0000\u00e0\u00e1\u0005"+
		"t\u0000\u0000\u00e1\u00e2\u0005u\u0000\u0000\u00e2\u00e3\u0005r\u0000"+
		"\u0000\u00e3\u00e4\u0005n\u0000\u0000\u00e4&\u0001\u0000\u0000\u0000\u00e5"+
		"\u00e6\u0005+\u0000\u0000\u00e6(\u0001\u0000\u0000\u0000\u00e7\u00e8\u0005"+
		"-\u0000\u0000\u00e8*\u0001\u0000\u0000\u0000\u00e9\u00ea\u0005*\u0000"+
		"\u0000\u00ea,\u0001\u0000\u0000\u0000\u00eb\u00ec\u0005/\u0000\u0000\u00ec"+
		".\u0001\u0000\u0000\u0000\u00ed\u00ee\u0005%\u0000\u0000\u00ee0\u0001"+
		"\u0000\u0000\u0000\u00ef\u00f0\u0005>\u0000\u0000\u00f02\u0001\u0000\u0000"+
		"\u0000\u00f1\u00f2\u0005<\u0000\u0000\u00f24\u0001\u0000\u0000\u0000\u00f3"+
		"\u00f4\u0005>\u0000\u0000\u00f4\u00f5\u0005=\u0000\u0000\u00f56\u0001"+
		"\u0000\u0000\u0000\u00f6\u00f7\u0005<\u0000\u0000\u00f7\u00f8\u0005=\u0000"+
		"\u0000\u00f88\u0001\u0000\u0000\u0000\u00f9\u00fa\u0005=\u0000\u0000\u00fa"+
		"\u00fb\u0005=\u0000\u0000\u00fb:\u0001\u0000\u0000\u0000\u00fc\u00fd\u0005"+
		"!\u0000\u0000\u00fd\u00fe\u0005=\u0000\u0000\u00fe<\u0001\u0000\u0000"+
		"\u0000\u00ff\u0100\u0005&\u0000\u0000\u0100\u0101\u0005&\u0000\u0000\u0101"+
		">\u0001\u0000\u0000\u0000\u0102\u0103\u0005|\u0000\u0000\u0103\u0104\u0005"+
		"|\u0000\u0000\u0104@\u0001\u0000\u0000\u0000\u0105\u0106\u0005!\u0000"+
		"\u0000\u0106B\u0001\u0000\u0000\u0000\u0107\u0108\u0005<\u0000\u0000\u0108"+
		"\u0109\u0005<\u0000\u0000\u0109D\u0001\u0000\u0000\u0000\u010a\u010b\u0005"+
		">\u0000\u0000\u010b\u010c\u0005>\u0000\u0000\u010cF\u0001\u0000\u0000"+
		"\u0000\u010d\u010e\u0005&\u0000\u0000\u010eH\u0001\u0000\u0000\u0000\u010f"+
		"\u0110\u0005|\u0000\u0000\u0110J\u0001\u0000\u0000\u0000\u0111\u0112\u0005"+
		"^\u0000\u0000\u0112L\u0001\u0000\u0000\u0000\u0113\u0114\u0005~\u0000"+
		"\u0000\u0114N\u0001\u0000\u0000\u0000\u0115\u0116\u0005=\u0000\u0000\u0116"+
		"P\u0001\u0000\u0000\u0000\u0117\u0118\u0005+\u0000\u0000\u0118\u0119\u0005"+
		"+\u0000\u0000\u0119R\u0001\u0000\u0000\u0000\u011a\u011b\u0005-\u0000"+
		"\u0000\u011b\u011c\u0005-\u0000\u0000\u011cT\u0001\u0000\u0000\u0000\u011d"+
		"\u011e\u0005.\u0000\u0000\u011eV\u0001\u0000\u0000\u0000\u011f\u0120\u0005"+
		",\u0000\u0000\u0120X\u0001\u0000\u0000\u0000\u0121\u0122\u0005;\u0000"+
		"\u0000\u0122Z\u0001\u0000\u0000\u0000\u0123\u0124\u0005{\u0000\u0000\u0124"+
		"\u0125\u0006-\u0000\u0000\u0125\\\u0001\u0000\u0000\u0000\u0126\u0127"+
		"\u0005}\u0000\u0000\u0127\u0128\u0006.\u0001\u0000\u0128^\u0001\u0000"+
		"\u0000\u0000\u0129\u012a\u0005/\u0000\u0000\u012a\u012b\u0005/\u0000\u0000"+
		"\u012b\u012f\u0001\u0000\u0000\u0000\u012c\u012e\b\u0001\u0000\u0000\u012d"+
		"\u012c\u0001\u0000\u0000\u0000\u012e\u0131\u0001\u0000\u0000\u0000\u012f"+
		"\u012d\u0001\u0000\u0000\u0000\u012f\u0130\u0001\u0000\u0000\u0000\u0130"+
		"\u0132\u0001\u0000\u0000\u0000\u0131\u012f\u0001\u0000\u0000\u0000\u0132"+
		"\u0133\u0006/\u0002\u0000\u0133`\u0001\u0000\u0000\u0000\u0134\u0135\u0005"+
		"/\u0000\u0000\u0135\u0136\u0005*\u0000\u0000\u0136\u013a\u0001\u0000\u0000"+
		"\u0000\u0137\u0139\t\u0000\u0000\u0000\u0138\u0137\u0001\u0000\u0000\u0000"+
		"\u0139\u013c\u0001\u0000\u0000\u0000\u013a\u013b\u0001\u0000\u0000\u0000"+
		"\u013a\u0138\u0001\u0000\u0000\u0000\u013b\u013d\u0001\u0000\u0000\u0000"+
		"\u013c\u013a\u0001\u0000\u0000\u0000\u013d\u013e\u0005*\u0000\u0000\u013e"+
		"\u013f\u0005/\u0000\u0000\u013f\u0140\u0001\u0000\u0000\u0000\u0140\u0141"+
		"\u00060\u0002\u0000\u0141b\u0001\u0000\u0000\u0000\u0142\u0144\u0007\u0002"+
		"\u0000\u0000\u0143\u0142\u0001\u0000\u0000\u0000\u0144\u0145\u0001\u0000"+
		"\u0000\u0000\u0145\u0143\u0001\u0000\u0000\u0000\u0145\u0146\u0001\u0000"+
		"\u0000\u0000\u0146\u0147\u0001\u0000\u0000\u0000\u0147\u0148\u00061\u0002"+
		"\u0000\u0148d\u0001\u0000\u0000\u0000\u0149\u014d\u0007\u0003\u0000\u0000"+
		"\u014a\u014c\u0007\u0004\u0000\u0000\u014b\u014a\u0001\u0000\u0000\u0000"+
		"\u014c\u014f\u0001\u0000\u0000\u0000\u014d\u014b\u0001\u0000\u0000\u0000"+
		"\u014d\u014e\u0001\u0000\u0000\u0000\u014e\u0152\u0001\u0000\u0000\u0000"+
		"\u014f\u014d\u0001\u0000\u0000\u0000\u0150\u0152\u00050\u0000\u0000\u0151"+
		"\u0149\u0001\u0000\u0000\u0000\u0151\u0150\u0001\u0000\u0000\u0000\u0152"+
		"f\u0001\u0000\u0000\u0000\u0153\u0157\u0007\u0005\u0000\u0000\u0154\u0156"+
		"\u0007\u0006\u0000\u0000\u0155\u0154\u0001\u0000\u0000\u0000\u0156\u0159"+
		"\u0001\u0000\u0000\u0000\u0157\u0155\u0001\u0000\u0000\u0000\u0157\u0158"+
		"\u0001\u0000\u0000\u0000\u0158h\u0001\u0000\u0000\u0000\u0159\u0157\u0001"+
		"\u0000\u0000\u0000\u015a\u0164\b\u0007\u0000\u0000\u015b\u015c\u0005\\"+
		"\u0000\u0000\u015c\u0164\u0005\"\u0000\u0000\u015d\u015e\u0005\\\u0000"+
		"\u0000\u015e\u0164\u0005n\u0000\u0000\u015f\u0160\u0005\\\u0000\u0000"+
		"\u0160\u0164\u0005r\u0000\u0000\u0161\u0162\u0005\\\u0000\u0000\u0162"+
		"\u0164\u0005\\\u0000\u0000\u0163\u015a\u0001\u0000\u0000\u0000\u0163\u015b"+
		"\u0001\u0000\u0000\u0000\u0163\u015d\u0001\u0000\u0000\u0000\u0163\u015f"+
		"\u0001\u0000\u0000\u0000\u0163\u0161\u0001\u0000\u0000\u0000\u0164j\u0001"+
		"\u0000\u0000\u0000\u0165\u0166\u00045\u0002\u0000\u0166\u0172\u0005\""+
		"\u0000\u0000\u0167\u0171\b\u0007\u0000\u0000\u0168\u0169\u0005\\\u0000"+
		"\u0000\u0169\u0171\u0005\"\u0000\u0000\u016a\u016b\u0005\\\u0000\u0000"+
		"\u016b\u0171\u0005n\u0000\u0000\u016c\u016d\u0005\\\u0000\u0000\u016d"+
		"\u0171\u0005r\u0000\u0000\u016e\u016f\u0005\\\u0000\u0000\u016f\u0171"+
		"\u0005\\\u0000\u0000\u0170\u0167\u0001\u0000\u0000\u0000\u0170\u0168\u0001"+
		"\u0000\u0000\u0000\u0170\u016a\u0001\u0000\u0000\u0000\u0170\u016c\u0001"+
		"\u0000\u0000\u0000\u0170\u016e\u0001\u0000\u0000\u0000\u0171\u0174\u0001"+
		"\u0000\u0000\u0000\u0172\u0170\u0001\u0000\u0000\u0000\u0172\u0173\u0001"+
		"\u0000\u0000\u0000\u0173\u0175\u0001\u0000\u0000\u0000\u0174\u0172\u0001"+
		"\u0000\u0000\u0000\u0175\u0176\u0005\"\u0000\u0000\u0176l\u0001\u0000"+
		"\u0000\u0000\u0177\u0178\u0005f\u0000\u0000\u0178\u0179\u0005\"\u0000"+
		"\u0000\u0179\u017b\u0001\u0000\u0000\u0000\u017a\u017c\u0003\u0003\u0001"+
		"\u0000\u017b\u017a\u0001\u0000\u0000\u0000\u017b\u017c\u0001\u0000\u0000"+
		"\u0000\u017c\u017d\u0001\u0000\u0000\u0000\u017d\u017e\u0005\"\u0000\u0000"+
		"\u017en\u0001\u0000\u0000\u0000\u017f\u0180\u0005f\u0000\u0000\u0180\u0181"+
		"\u0005\"\u0000\u0000\u0181\u0183\u0001\u0000\u0000\u0000\u0182\u0184\u0003"+
		"\u0003\u0001\u0000\u0183\u0182\u0001\u0000\u0000\u0000\u0183\u0184\u0001"+
		"\u0000\u0000\u0000\u0184\u0185\u0001\u0000\u0000\u0000\u0185\u0186\u0006"+
		"7\u0003\u0000\u0186p\u0001\u0000\u0000\u0000\u0187\u0189\u00048\u0003"+
		"\u0000\u0188\u018a\u0003\u0003\u0001\u0000\u0189\u0188\u0001\u0000\u0000"+
		"\u0000\u0189\u018a\u0001\u0000\u0000\u0000\u018a\u018b\u0001\u0000\u0000"+
		"\u0000\u018b\u018c\u0005\"\u0000\u0000\u018c\u018d\u00068\u0004\u0000"+
		"\u018dr\u0001\u0000\u0000\u0000\u000f\u0000\u0081\u0087\u012f\u013a\u0145"+
		"\u014d\u0151\u0157\u0163\u0170\u0172\u017b\u0183\u0189\u0005\u0001-\u0000"+
		"\u0001.\u0001\u0006\u0000\u0000\u00017\u0002\u00018\u0003";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}